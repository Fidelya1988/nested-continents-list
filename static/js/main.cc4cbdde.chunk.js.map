{"version":3,"sources":["app.module.css","api/queries/continents.js","img/loader.gif","components/Loader/Loader.jsx","components/ListItem/ListItem.jsx","App.js","api/client/client.js","index.js","helpers/getChildArray.js","helpers/getSelectedItem.tsx","helpers/getItemCode.tsx"],"names":["module","exports","GET_CONTINENTS","gql","Loader","src","loader","alt","width","ListItem","items","selectedItem","handleSelect","useContext","HelpersContext","getChildArray","getSelectedItem","map","item","onClick","code","name","App","useQuery","data","loading","useState","selectedContinent","setSelectedContinent","selectedCountry","setSelectedCountry","getItemCode","className","styles","list","continents","continentCode","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","React","createContext","ReactDOM","render","StrictMode","ApolloProvider","Provider","value","obj","key","Array","filter","c","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,KAAO,oB,0LCCZC,EAAiBC,YAAH,qO,iBCFZ,MAA0B,mC,OCO1BC,MAJf,WACE,OAAO,qBAAKC,IAAKC,EAAQC,IAAI,UAAUC,MAAO,MCuBjCC,MAxBf,SAASA,EAAT,GAA0D,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACvC,EAA2CC,qBAAWC,GAA9CC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,gBAEvB,OACE,mCACGN,EAAMO,KAAI,SAACC,GAAD,OACT,+BACE,mBAAGC,QAAS,kBAAMP,EAAaM,EAAKE,OAApC,SAA4CF,EAAKG,OAChDL,EAAgBE,EAAKE,KAAMT,IAC1B,+BACG,IACD,cAACF,EAAD,CACEC,MAAOK,EAAcG,GACrBN,aAAcG,EAAcG,IAASN,EACrCD,aAAcI,EAAcG,IAASP,SARpCO,EAAKE,YCmCPE,MArCf,WACE,MAA0BC,YAASrB,GAA3BsB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAAkDC,mBAAS,MAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAA8CF,mBAAS,MAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACQC,EAAgBlB,qBAAWC,GAA3BiB,YAgBR,OACE,8BACIN,EASA,cAAC,EAAD,IARA,oBAAIO,UAAWC,IAAOC,KAAtB,SACE,cAAC,EAAD,CACExB,MAAOc,EAAKW,WACZxB,aAAc,CAAEgB,oBAAmBE,mBACnCjB,aArBW,SAACQ,GACpB,IAAMgB,EAAgBL,EAAYX,EAAMI,EAAKW,YAEzCR,IAAsBP,EACxBQ,EAAqB,MACZR,IAASgB,GAClBR,EAAqBR,GAEnBS,IAAoBT,EACtBU,EAAmB,MACVV,IAASgB,GAClBN,EAAmBV,W,gCCjBZiB,EAAS,IAAIC,IAAa,CACrCC,KAAM,IAAIC,IALK,CACfC,IAAK,wCAKLC,MAAO,IAAIC,MCAA7B,EAAiB8B,IAAMC,gBACpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAgBZ,OAAQA,EAAxB,SACE,cAACvB,EAAeoC,SAAhB,CACEC,MAAO,CAAEpC,cCbY,SAACqC,GAC5B,IAAK,IAAMC,KAAOD,EAChB,GAAIA,EAAIC,aAAgBC,MAAO,OAAOF,EAAIC,IDWdrC,gBEdD,SAACI,EAAcV,GAC5C,IAAK,IAAM2C,KAAO3C,EAChB,GAAIA,EAAM2C,KAASjC,EAAM,OAAOV,EAAM2C,IFYOtB,YGdtB,SAACX,EAAcV,GACxC,IAEA,EAFcA,EAAMO,KAAI,SAACC,GAAD,OAAUA,EAAKE,QAEdmC,QAAO,SAACC,GAAD,OAAOA,IAAMpC,KAE7C,OAFA,sBHUI,SAGE,cAAC,EAAD,UAINqC,SAASC,eAAe,W","file":"static/js/main.cc4cbdde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"app_list__1EzJG\"};","import { gql } from \"@apollo/client\";\r\n\r\nexport const GET_CONTINENTS = gql`\r\n  query GetContinents {\r\n    continents {\r\n      name\r\n      code\r\n      countries {\r\n        name\r\n        code\r\n\r\n        languages {\r\n          name\r\n          code\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/loader.0a559f40.gif\";","import React from \"react\";\r\nimport loader from \"./../../img/loader.gif\";\r\n\r\nfunction Loader() {\r\n  return <img src={loader} alt=\"laoding\" width={40} />;\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useContext } from \"react\";\r\nimport { HelpersContext } from \"../..\";\r\n\r\nfunction ListItem({ items, selectedItem, handleSelect }) {\r\n  const { getChildArray, getSelectedItem } = useContext(HelpersContext);\r\n\r\n  return (\r\n    <>\r\n      {items.map((item) => (\r\n        <li key={item.code}>\r\n          <p onClick={() => handleSelect(item.code)}>{item.name}</p>\r\n          {getSelectedItem(item.code, selectedItem) && (\r\n            <ul>\r\n              {\" \"}\r\n              <ListItem\r\n                items={getChildArray(item)}\r\n                handleSelect={getChildArray(item) && handleSelect}\r\n                selectedItem={getChildArray(item) && selectedItem}\r\n              />\r\n            </ul>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_CONTINENTS } from \"./api/queries/continents\";\r\nimport styles from \"./app.module.css\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport ListItem from \"./components/ListItem/ListItem\";\r\nimport { HelpersContext } from \".\";\r\nfunction App() {\r\n  const { data, loading } = useQuery(GET_CONTINENTS);\r\n  const [selectedContinent, setSelectedContinent] = useState(null);\r\n  const [selectedCountry, setSelectedCountry] = useState(null);\r\n  const { getItemCode } = useContext(HelpersContext);\r\n\r\n  const handleSelect = (code) => {\r\n    const continentCode = getItemCode(code, data.continents);\r\n\r\n    if (selectedContinent === code) {\r\n      setSelectedContinent(null);\r\n    } else if (code === continentCode) {\r\n      setSelectedContinent(code);\r\n    }\r\n    if (selectedCountry === code) {\r\n      setSelectedCountry(null);\r\n    } else if (code !== continentCode) {\r\n      setSelectedCountry(code);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {!loading ? (\r\n        <ul className={styles.list}>\r\n          <ListItem\r\n            items={data.continents}\r\n            selectedItem={{ selectedContinent, selectedCountry }}\r\n            handleSelect={handleSelect}\r\n          />\r\n        </ul>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\n\r\nconst httpLink = {\r\n  uri: \"https://countries.trevorblades.com/\",\r\n};\r\n\r\nexport const client = new ApolloClient({\r\n  link: new HttpLink(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ApolloProvider } from \"@apollo/client\";\r\nimport { client } from \"./api/client/client\";\r\nimport { getChildArray } from './helpers/getChildArray'\r\nimport { getSelectedItem } from \"./helpers/getSelectedItem\";\r\nimport { getItemCode } from \"./helpers/getItemCode\";\r\nexport const HelpersContext = React.createContext();\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <HelpersContext.Provider\r\n        value={{ getChildArray, getSelectedItem, getItemCode }}\r\n      >\r\n        <App />\r\n      </HelpersContext.Provider>\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","\r\nexport const getChildArray = (obj) => {\r\n  for (const key in obj) {\r\n    if (obj[key] instanceof Array) return obj[key];\r\n  }\r\n};\r\n","export const getSelectedItem = (code: string, items: []): void => {\r\n  for (const key in items) {\r\n    if (items[key] === code) return items[key];\r\n  }\r\n};\r\n","export const getItemCode = (code: string, items: [string, any]): string => {\r\n  const codes = items.map((item) => item.code);\r\n\r\n  const [itemCode] = codes.filter((c) => c === code);\r\n\r\n  return itemCode;\r\n};\r\n"],"sourceRoot":""}